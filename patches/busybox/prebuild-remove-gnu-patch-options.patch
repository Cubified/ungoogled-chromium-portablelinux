--- ./ungoogled-chromium/utils/patches.py
+++ ./ungoogled-chromium/utils/patches.py
@@ -63,7 +63,7 @@
         raise ValueError('Could not find the patch binary: {}'.format(patch_bin_path))
 
     # Ensure patch actually runs
-    cmd = [str(patch_bin_path), '--version']
+    cmd = [str(patch_bin_path), '--help']
     result = subprocess.run(
         cmd, stdout=subprocess.PIPE, stderr=subprocess.PIPE, universal_newlines=True)
     if result.returncode:
@@ -117,19 +117,17 @@
     logger = get_logger()
     for patch_path, patch_num in zip(patch_paths, range(1, len(patch_paths) + 1)):
         cmd = [
-            str(patch_bin_path), '-p1', '--ignore-whitespace', '-i',
-            str(patch_path), '-d',
-            str(tree_path), '--no-backup-if-mismatch'
+            str(patch_bin_path), '-p1', '-i',
+            str(patch_path)
         ]
         if reverse:
-            cmd.append('--reverse')
+            cmd.append('-R')
             log_word = 'Reversing'
         else:
-            cmd.append('--forward')
             log_word = 'Applying'
         logger.info('* %s %s (%s/%s)', log_word, patch_path.name, patch_num, len(patch_paths))
         logger.debug(' '.join(cmd))
-        subprocess.run(cmd, check=True)
+        subprocess.run(cmd, check=True, cwd=tree_path)
 
 
 def generate_patches_from_series(patches_dir, resolve=False):
